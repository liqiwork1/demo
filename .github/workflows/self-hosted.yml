name: self-hosted CI/CD

on: 
  push:
    branches: [main]
    tags:
      - "v*"      #在提交master时触发
      
permissions:
  id-token: write
  contents: read
  actions: read
jobs:
  label_issues:
      runs-on: ubuntu-latest
      permissions:
        issues: write
      steps:
        - name: Label issues
        - uses: andymckay/labeler@1.0.2
          with:
            add-labels: "needs-triage"
            ignore-if-labeled: true
            repo-token: ${{ secrets.GITHUB_TOKEN }}
  build:
    permissions: write-all
    runs-on: self-hosted     #运行环境
    steps:
      - name: Set up JDK 1.8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: 'maven'
      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.3
        with:
          maven-version: 3.6.3
      - name: mvn opration
        run: |
          mvn -v
          
      # 下载代码
      - uses: actions/checkout@master    #获取main分支      
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      - run: mkdir staging && cp target/*.jar staging
      # 设置 jobs Maven pom 版本环境变量
      - name: Set Release version env variable
        run: |
          echo "RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
      - name: Publish to GitHub Packages Apache Maven
        run: mvn deploy
        env:
          GITHUB_TOKEN: ${{ github.token }} # GITHUB_TOKEN is the default env for the password
      - name: "alert"
        run: |
          echo "done!"
  deploy:
    needs: build
    #	配置权限
    permissions: write-all
    runs-on: self-hosted    #运行环境
    steps:
      # 上传文件并发布 Release
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: false
          title: "Release ${{ env.RELEASE_VERSION }}"
  upload:
    needs: deploy
    permissions: write-all
    runs-on: self-hosted    #运行环境
    steps:
      - uses: actions/upload-artifact@v3
        with:
          name: Package
          path: staging
