name: Java CI     #Actions名称

on: 
  push:
    branches: [main]
    tags:
      - "v*"       #在提交master时触发

jobs:
#   setup:
#     permissions: write-all
#     runs-on: ubuntu-latest    #运行环境
#     steps:
#       - name: Set up JDK 1.8
#         uses: joschi/setup-jdk@v2
#         with:
#           java-version: '8'
  build:
#     needs: setup
    #	配置权限
    permissions: write-all
    runs-on: ubuntu-latest    #运行环境
    steps:
      - name: Set up JDK 1.8
        uses: joschi/setup-jdk@v2
        with:
          java-version: '8'
      # 下载代码
      - uses: actions/checkout@master    #获取master分支    
          # 配置 settings.xml 一般用于 Mavne 私库验证等
#       - name: Download Maven
#         run: |
#           curl -sL https://www-eu.apache.org/dist/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.zip -o maven.zip
#           apt-get update
#           apt-get -y install unzip
#           unzip -d /usr/share maven.zip
#           rm maven.zip
#           ln -s /usr/share/apache-maven-3.6.3/bin/mvn /usr/bin/mvn
#           echo "M2_HOME=/usr/share/apache-maven-3.6.3" | tee -a /etc/environment
      - name: ls source code dir
        run: |
          ls ./
          echo $RUNNER_TEMP
          echo $GITHUB_ACTION
          echo $GITHUB_ACTION_PATH
      
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      - run: mkdir staging && cp target/*.jar staging
      # 设置 jobs Maven pom 版本环境变量
      - name: Set Release version env variable
        run: |
          echo "RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
      - name: "Build & test"
        run: |
          echo "done!"
  deploy:
    needs: build
    #	配置权限
    permissions: write-all
    runs-on: ubuntu-latest    #运行环境
    steps:
      # 上传文件并发布 Release
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{ env.RELEASE_VERSION }}"
          prerelease: false
          title: "Release ${{ env.RELEASE_VERSION }}"
          files: |
            staging/*.jar
